{"ast":null,"code":"export default {\n  namespaced: true,\n\n  state() {\n    return {\n      productsList: [// {\n        //     \"id_product\": 1,\n        //     \"product_name\": \"ELLERY X M'O CAPSULE_001\",\n        //     \"price\": 1600,\n        //     \"img_product\": \"1.jpg\"\n        //   },\n        //   {\n        //     \"id_product\": 2,\n        //     \"product_name\": \"ELLERY X M'O CAPSULE_002\",\n        //     \"price\": 3000,\n        //     \"img_product\": \"2.jpg\"\n        //   },\n      ],\n      filteredProductList: []\n    };\n  },\n\n  mutations: {\n    setProductsToState: (state, result) => {\n      state.productsList = result;\n    },\n    setFilteredProductsToState: (state, filteredProductList) => {\n      state.filteredProductList = filteredProductList;\n      console.log(state.filteredProductList);\n    } // filter(state, userSearch){\n    //     let regexp = new RegExp('001', 'i');\n    //     state.filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n    //     state.filteredProductList = [1, 2, 4];\n    //     console.log(state.productsList);\n    // }\n    // .then(data => {\n    //     for (let item of data){\n    //         item.imgPath = `../images/featured/${item.id_product}.jpg`;\n    //         this.$data.products.push(item);\n    //         this.$data.filtered.push(item);\n    //     }\n    // })\n\n  },\n  actions: {\n    getJson({\n      commit\n    }, url) {\n      // console.log(url)\n      return fetch(url).then(result => result.json()).then(result => {\n        commit('setProductsToState', result);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    filter({\n      commit,\n      state\n    }, userSearch) {\n      console.log(userSearch);\n      let regexp = new RegExp(userSearch, 'i');\n      let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name)); // let filteredProductList = state.productsList;\n      // let filteredProductList = '12';\n\n      commit('setFilteredProductsToState', filteredProductList);\n      console.log(filteredProductList);\n    }\n\n  }\n};","map":{"version":3,"names":["namespaced","state","productsList","filteredProductList","mutations","setProductsToState","result","setFilteredProductsToState","console","log","actions","getJson","commit","url","fetch","then","json","catch","error","filter","userSearch","regexp","RegExp","el","test","product_name"],"sources":["/Users/denis/gb_online_store/src/store/products.js"],"sourcesContent":["export default {\n    namespaced: true,\n    state() {\n        return {\n            productsList: [\n            // {\n            //     \"id_product\": 1,\n            //     \"product_name\": \"ELLERY X M'O CAPSULE_001\",\n            //     \"price\": 1600,\n            //     \"img_product\": \"1.jpg\"\n            //   },\n            //   {\n            //     \"id_product\": 2,\n            //     \"product_name\": \"ELLERY X M'O CAPSULE_002\",\n            //     \"price\": 3000,\n            //     \"img_product\": \"2.jpg\"\n            //   },\n            ],\n            filteredProductList: []\n        }\n    },\n    mutations: {\n        setProductsToState: (state, result) => {\n            state.productsList = result;\n        },\n\n        setFilteredProductsToState: (state, filteredProductList) => {\n            state.filteredProductList = filteredProductList;\n            console.log(state.filteredProductList);\n        }\n\n        // filter(state, userSearch){\n        //     let regexp = new RegExp('001', 'i');\n        //     state.filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n        //     state.filteredProductList = [1, 2, 4];\n\n        //     console.log(state.productsList);\n        // }\n        \n        // .then(data => {\n        //     for (let item of data){\n        //         item.imgPath = `../images/featured/${item.id_product}.jpg`;\n        //         this.$data.products.push(item);\n        //         this.$data.filtered.push(item);\n        //     }\n        // })\n    },\n    actions: {\n        getJson({commit}, url){\n            // console.log(url)\n            return fetch(url)\n                .then(result => result.json())\n                .then(result => {\n                    commit('setProductsToState', result);\n                })\n\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n\n        filter({commit, state}, userSearch){\n            console.log(userSearch);\n            let regexp = new RegExp(userSearch, 'i');\n            let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n            // let filteredProductList = state.productsList;\n\n            // let filteredProductList = '12';\n            commit('setFilteredProductsToState', filteredProductList);\n            console.log(filteredProductList);\n        }\n\n    },\n}"],"mappings":"AAAA,eAAe;EACXA,UAAU,EAAE,IADD;;EAEXC,KAAK,GAAG;IACJ,OAAO;MACHC,YAAY,EAAE,CACd;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAZc,CADX;MAeHC,mBAAmB,EAAE;IAflB,CAAP;EAiBH,CApBU;;EAqBXC,SAAS,EAAE;IACPC,kBAAkB,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;MACnCL,KAAK,CAACC,YAAN,GAAqBI,MAArB;IACH,CAHM;IAKPC,0BAA0B,EAAE,CAACN,KAAD,EAAQE,mBAAR,KAAgC;MACxDF,KAAK,CAACE,mBAAN,GAA4BA,mBAA5B;MACAK,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACE,mBAAlB;IACH,CARM,CAUP;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;EAxBO,CArBA;EA+CXO,OAAO,EAAE;IACLC,OAAO,CAAC;MAACC;IAAD,CAAD,EAAWC,GAAX,EAAe;MAClB;MACA,OAAOC,KAAK,CAACD,GAAD,CAAL,CACFE,IADE,CACGT,MAAM,IAAIA,MAAM,CAACU,IAAP,EADb,EAEFD,IAFE,CAEGT,MAAM,IAAI;QACZM,MAAM,CAAC,oBAAD,EAAuBN,MAAvB,CAAN;MACH,CAJE,EAMFW,KANE,CAMIC,KAAK,IAAI;QACZV,OAAO,CAACC,GAAR,CAAYS,KAAZ;MACH,CARE,CAAP;IASH,CAZI;;IAcLC,MAAM,CAAC;MAACP,MAAD;MAASX;IAAT,CAAD,EAAkBmB,UAAlB,EAA6B;MAC/BZ,OAAO,CAACC,GAAR,CAAYW,UAAZ;MACA,IAAIC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,UAAX,EAAuB,GAAvB,CAAb;MACA,IAAIjB,mBAAmB,GAAGF,KAAK,CAACC,YAAN,CAAmBiB,MAAnB,CAA0BI,EAAE,IAAIF,MAAM,CAACG,IAAP,CAAYD,EAAE,CAACE,YAAf,CAAhC,CAA1B,CAH+B,CAI/B;MAEA;;MACAb,MAAM,CAAC,4BAAD,EAA+BT,mBAA/B,CAAN;MACAK,OAAO,CAACC,GAAR,CAAYN,mBAAZ;IACH;;EAvBI;AA/CE,CAAf"},"metadata":{},"sourceType":"module"}