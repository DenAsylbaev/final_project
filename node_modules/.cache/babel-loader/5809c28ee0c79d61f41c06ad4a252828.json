{"ast":null,"code":"export default {\n  namespaced: true,\n\n  state() {\n    return {\n      productsList: [// {\n        //     \"id_product\": 1,\n        //     \"product_name\": \"ELLERY X M'O CAPSULE_001\",\n        //     \"price\": 1600,\n        //     \"img_product\": \"1.jpg\"\n        //   },\n        //   {\n        //     \"id_product\": 2,\n        //     \"product_name\": \"ELLERY X M'O CAPSULE_002\",\n        //     \"price\": 3000,\n        //     \"img_product\": \"2.jpg\"\n        //   },\n      ],\n      filteredProductList: []\n    };\n  },\n\n  mutations: {\n    // setProductsToState: (state, result) => {\n    //     state.productsList = result;\n    // },\n    setFilteredProductsToState: (state, filteredProductList) => {\n      state.filteredProductList = filteredProductList;\n    } // filter(state, userSearch){\n    //     let regexp = new RegExp('001', 'i');\n    //     state.filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n    //     state.filteredProductList = [1, 2, 4];\n    //     console.log(state.productsList);\n    // }\n    // .then(data => {\n    //     for (let item of data){\n    //         item.imgPath = `../images/featured/${item.id_product}.jpg`;\n    //         this.$data.products.push(item);\n    //         this.$data.filtered.push(item);\n    //     }\n    // })\n\n  },\n  actions: {\n    // getJson({commit}, url){\n    //     // console.log(url)\n    //     return fetch(url)\n    //         .then(result => result.json())\n    //         .then(result => {\n    //             commit('setProductsToState', result);\n    //         })\n    //         .catch(error => {\n    //             console.log(error)\n    //         })\n    // },\n    filter({\n      commit,\n      state\n    }, userSearch) {\n      console.log(userSearch);\n      let regexp = new RegExp('001', 'i'); // let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n      // let filteredProductList = state.productsList;\n\n      let filteredProductList = '12';\n      commit('setFilteredProductsToState', filteredProductList);\n      console.log(filteredProductList);\n    }\n\n  }\n};","map":{"version":3,"names":["namespaced","state","productsList","filteredProductList","mutations","setFilteredProductsToState","actions","filter","commit","userSearch","console","log","regexp","RegExp"],"sources":["/Users/denis/gb_online_store/src/store/products.js"],"sourcesContent":["export default {\n    namespaced: true,\n    state() {\n        return {\n            productsList: [\n            // {\n            //     \"id_product\": 1,\n            //     \"product_name\": \"ELLERY X M'O CAPSULE_001\",\n            //     \"price\": 1600,\n            //     \"img_product\": \"1.jpg\"\n            //   },\n            //   {\n            //     \"id_product\": 2,\n            //     \"product_name\": \"ELLERY X M'O CAPSULE_002\",\n            //     \"price\": 3000,\n            //     \"img_product\": \"2.jpg\"\n            //   },\n            ],\n            filteredProductList: []\n        }\n    },\n    mutations: {\n        // setProductsToState: (state, result) => {\n        //     state.productsList = result;\n        // },\n\n        setFilteredProductsToState: (state, filteredProductList) => {\n            state.filteredProductList = filteredProductList;\n        }\n\n        // filter(state, userSearch){\n        //     let regexp = new RegExp('001', 'i');\n        //     state.filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n        //     state.filteredProductList = [1, 2, 4];\n\n        //     console.log(state.productsList);\n        // }\n        \n        // .then(data => {\n        //     for (let item of data){\n        //         item.imgPath = `../images/featured/${item.id_product}.jpg`;\n        //         this.$data.products.push(item);\n        //         this.$data.filtered.push(item);\n        //     }\n        // })\n    },\n    actions: {\n        // getJson({commit}, url){\n        //     // console.log(url)\n        //     return fetch(url)\n        //         .then(result => result.json())\n        //         .then(result => {\n        //             commit('setProductsToState', result);\n        //         })\n\n        //         .catch(error => {\n        //             console.log(error)\n        //         })\n        // },\n\n        filter({commit, state}, userSearch){\n            console.log(userSearch);\n            let regexp = new RegExp('001', 'i');\n            // let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n            // let filteredProductList = state.productsList;\n\n            let filteredProductList = '12';\n            commit('setFilteredProductsToState', filteredProductList);\n            console.log(filteredProductList);\n        }\n\n    },\n}"],"mappings":"AAAA,eAAe;EACXA,UAAU,EAAE,IADD;;EAEXC,KAAK,GAAG;IACJ,OAAO;MACHC,YAAY,EAAE,CACd;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAZc,CADX;MAeHC,mBAAmB,EAAE;IAflB,CAAP;EAiBH,CApBU;;EAqBXC,SAAS,EAAE;IACP;IACA;IACA;IAEAC,0BAA0B,EAAE,CAACJ,KAAD,EAAQE,mBAAR,KAAgC;MACxDF,KAAK,CAACE,mBAAN,GAA4BA,mBAA5B;IACH,CAPM,CASP;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;EAvBO,CArBA;EA8CXG,OAAO,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEAC,MAAM,CAAC;MAACC,MAAD;MAASP;IAAT,CAAD,EAAkBQ,UAAlB,EAA6B;MAC/BC,OAAO,CAACC,GAAR,CAAYF,UAAZ;MACA,IAAIG,MAAM,GAAG,IAAIC,MAAJ,CAAW,KAAX,EAAkB,GAAlB,CAAb,CAF+B,CAG/B;MACA;;MAEA,IAAIV,mBAAmB,GAAG,IAA1B;MACAK,MAAM,CAAC,4BAAD,EAA+BL,mBAA/B,CAAN;MACAO,OAAO,CAACC,GAAR,CAAYR,mBAAZ;IACH;;EAvBI;AA9CE,CAAf"},"metadata":{},"sourceType":"module"}