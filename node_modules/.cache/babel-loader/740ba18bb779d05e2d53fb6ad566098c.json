{"ast":null,"code":"export default {\n  namespaced: true,\n\n  state() {\n    return {\n      productsList: [],\n      filteredProductList: []\n    };\n  },\n\n  mutations: {\n    setProductsToState: (state, result) => {\n      state.productsList = result;\n    },\n    setFilteredProductsToState: (state, regexp) => {\n      state.filteredProductList = regexp;\n    } // filter(state, userSearch){\n    //     let regexp = new RegExp('001', 'i');\n    //     state.filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n    //     state.filteredProductList = [1, 2, 4];\n    //     console.log(state.productsList);\n    // }\n    // .then(data => {\n    //     for (let item of data){\n    //         item.imgPath = `../images/featured/${item.id_product}.jpg`;\n    //         this.$data.products.push(item);\n    //         this.$data.filtered.push(item);\n    //     }\n    // })\n\n  },\n  actions: {\n    getJson({\n      commit\n    }, url) {\n      // console.log(url)\n      return fetch(url).then(result => result.json()).then(result => {\n        commit('setProductsToState', result);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    filter({\n      commit\n    }, userSearch) {\n      let regexp = new RegExp('001', 'i');\n      let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name)); // let regexp = [1, 2, 4];\n\n      commit('setFilteredProductsToState', filteredProductList); // console.log(state.productsList);\n    }\n\n  }\n};","map":{"version":3,"names":["namespaced","state","productsList","filteredProductList","mutations","setProductsToState","result","setFilteredProductsToState","regexp","actions","getJson","commit","url","fetch","then","json","catch","error","console","log","filter","userSearch","RegExp","el","test","product_name"],"sources":["/Users/denis/gb_online_store/src/store/products.js"],"sourcesContent":["export default {\n    namespaced: true,\n    state() {\n        return {\n            productsList: [],\n            filteredProductList: []\n        }\n    },\n    mutations: {\n        setProductsToState: (state, result) => {\n            state.productsList = result;\n        },\n\n        setFilteredProductsToState: (state, regexp) => {\n            state.filteredProductList = regexp;\n\n        }\n\n        // filter(state, userSearch){\n        //     let regexp = new RegExp('001', 'i');\n        //     state.filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n        //     state.filteredProductList = [1, 2, 4];\n\n        //     console.log(state.productsList);\n        // }\n        \n        // .then(data => {\n        //     for (let item of data){\n        //         item.imgPath = `../images/featured/${item.id_product}.jpg`;\n        //         this.$data.products.push(item);\n        //         this.$data.filtered.push(item);\n        //     }\n        // })\n    },\n    actions: {\n        getJson({commit}, url){\n            // console.log(url)\n            return fetch(url)\n                .then(result => result.json())\n                .then(result => {\n                    commit('setProductsToState', result);\n                })\n\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n\n        filter({commit}, userSearch){\n            let regexp = new RegExp('001', 'i');\n            let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n            // let regexp = [1, 2, 4];\n            commit('setFilteredProductsToState', filteredProductList);\n\n            // console.log(state.productsList);\n        }\n\n    },\n}"],"mappings":"AAAA,eAAe;EACXA,UAAU,EAAE,IADD;;EAEXC,KAAK,GAAG;IACJ,OAAO;MACHC,YAAY,EAAE,EADX;MAEHC,mBAAmB,EAAE;IAFlB,CAAP;EAIH,CAPU;;EAQXC,SAAS,EAAE;IACPC,kBAAkB,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;MACnCL,KAAK,CAACC,YAAN,GAAqBI,MAArB;IACH,CAHM;IAKPC,0BAA0B,EAAE,CAACN,KAAD,EAAQO,MAAR,KAAmB;MAC3CP,KAAK,CAACE,mBAAN,GAA4BK,MAA5B;IAEH,CARM,CAUP;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;EAxBO,CARA;EAkCXC,OAAO,EAAE;IACLC,OAAO,CAAC;MAACC;IAAD,CAAD,EAAWC,GAAX,EAAe;MAClB;MACA,OAAOC,KAAK,CAACD,GAAD,CAAL,CACFE,IADE,CACGR,MAAM,IAAIA,MAAM,CAACS,IAAP,EADb,EAEFD,IAFE,CAEGR,MAAM,IAAI;QACZK,MAAM,CAAC,oBAAD,EAAuBL,MAAvB,CAAN;MACH,CAJE,EAMFU,KANE,CAMIC,KAAK,IAAI;QACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACH,CARE,CAAP;IASH,CAZI;;IAcLG,MAAM,CAAC;MAACT;IAAD,CAAD,EAAWU,UAAX,EAAsB;MACxB,IAAIb,MAAM,GAAG,IAAIc,MAAJ,CAAW,KAAX,EAAkB,GAAlB,CAAb;MACA,IAAInB,mBAAmB,GAAGF,KAAK,CAACC,YAAN,CAAmBkB,MAAnB,CAA0BG,EAAE,IAAIf,MAAM,CAACgB,IAAP,CAAYD,EAAE,CAACE,YAAf,CAAhC,CAA1B,CAFwB,CAGxB;;MACAd,MAAM,CAAC,4BAAD,EAA+BR,mBAA/B,CAAN,CAJwB,CAMxB;IACH;;EArBI;AAlCE,CAAf"},"metadata":{},"sourceType":"module"}