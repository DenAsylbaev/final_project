{"ast":null,"code":"export default {\n  namespaced: true,\n\n  state() {\n    return {\n      productsList: [],\n      filteredProductList: []\n    };\n  },\n\n  mutations: {\n    setProductsToState: (state, result) => {\n      state.productsList = result;\n      state.filteredProductList = result;\n    },\n    setFilteredProductsToState: (state, filteredProductList) => {\n      state.filteredProductList = filteredProductList;\n      console.log(state.filteredProductList);\n    }\n  },\n  actions: {\n    getJson({\n      commit\n    }, url) {\n      return fetch(url).then(result => result.json()).then(result => {\n        commit('setProductsToState', result);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    filter({\n      commit,\n      state\n    }, userSearch) {\n      let regexp = new RegExp(userSearch, 'i');\n      let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n      commit('setFilteredProductsToState', filteredProductList);\n    }\n\n  },\n  getters: {\n    filteredProducts(state) {\n      return state.filteredProductList;\n    },\n\n    products(state) {\n      return state.productsList;\n    }\n\n  }\n};","map":{"version":3,"names":["namespaced","state","productsList","filteredProductList","mutations","setProductsToState","result","setFilteredProductsToState","console","log","actions","getJson","commit","url","fetch","then","json","catch","error","filter","userSearch","regexp","RegExp","el","test","product_name","getters","filteredProducts","products"],"sources":["/Users/denis/gb_online_store/src/store/products.js"],"sourcesContent":["export default {\n    namespaced: true,\n    state() {\n        return {\n            productsList: [],\n            filteredProductList: []\n        }\n    },\n    mutations: {\n        setProductsToState: (state, result) => {\n            state.productsList = result;\n            state.filteredProductList = result;\n        },\n\n        setFilteredProductsToState: (state, filteredProductList) => {\n            state.filteredProductList = filteredProductList;\n            console.log(state.filteredProductList);\n        }\n    },\n    actions: {\n        getJson({commit}, url){\n            return fetch(url)\n                .then(result => result.json())\n                .then(result => {\n                    commit('setProductsToState', result);\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n\n        filter({commit, state}, userSearch){\n            let regexp = new RegExp(userSearch, 'i');\n            let filteredProductList = state.productsList.filter(el => regexp.test(el.product_name));\n            commit('setFilteredProductsToState', filteredProductList);\n        },\n        \n    },\n    getters: {\n        filteredProducts(state) {\n            return state.filteredProductList\n        },\n        products(state) {\n            return state.productsList\n        }\n    }\n}"],"mappings":"AAAA,eAAe;EACXA,UAAU,EAAE,IADD;;EAEXC,KAAK,GAAG;IACJ,OAAO;MACHC,YAAY,EAAE,EADX;MAEHC,mBAAmB,EAAE;IAFlB,CAAP;EAIH,CAPU;;EAQXC,SAAS,EAAE;IACPC,kBAAkB,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;MACnCL,KAAK,CAACC,YAAN,GAAqBI,MAArB;MACAL,KAAK,CAACE,mBAAN,GAA4BG,MAA5B;IACH,CAJM;IAMPC,0BAA0B,EAAE,CAACN,KAAD,EAAQE,mBAAR,KAAgC;MACxDF,KAAK,CAACE,mBAAN,GAA4BA,mBAA5B;MACAK,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACE,mBAAlB;IACH;EATM,CARA;EAmBXO,OAAO,EAAE;IACLC,OAAO,CAAC;MAACC;IAAD,CAAD,EAAWC,GAAX,EAAe;MAClB,OAAOC,KAAK,CAACD,GAAD,CAAL,CACFE,IADE,CACGT,MAAM,IAAIA,MAAM,CAACU,IAAP,EADb,EAEFD,IAFE,CAEGT,MAAM,IAAI;QACZM,MAAM,CAAC,oBAAD,EAAuBN,MAAvB,CAAN;MACH,CAJE,EAKFW,KALE,CAKIC,KAAK,IAAI;QACZV,OAAO,CAACC,GAAR,CAAYS,KAAZ;MACH,CAPE,CAAP;IAQH,CAVI;;IAYLC,MAAM,CAAC;MAACP,MAAD;MAASX;IAAT,CAAD,EAAkBmB,UAAlB,EAA6B;MAC/B,IAAIC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,UAAX,EAAuB,GAAvB,CAAb;MACA,IAAIjB,mBAAmB,GAAGF,KAAK,CAACC,YAAN,CAAmBiB,MAAnB,CAA0BI,EAAE,IAAIF,MAAM,CAACG,IAAP,CAAYD,EAAE,CAACE,YAAf,CAAhC,CAA1B;MACAb,MAAM,CAAC,4BAAD,EAA+BT,mBAA/B,CAAN;IACH;;EAhBI,CAnBE;EAsCXuB,OAAO,EAAE;IACLC,gBAAgB,CAAC1B,KAAD,EAAQ;MACpB,OAAOA,KAAK,CAACE,mBAAb;IACH,CAHI;;IAILyB,QAAQ,CAAC3B,KAAD,EAAQ;MACZ,OAAOA,KAAK,CAACC,YAAb;IACH;;EANI;AAtCE,CAAf"},"metadata":{},"sourceType":"module"}