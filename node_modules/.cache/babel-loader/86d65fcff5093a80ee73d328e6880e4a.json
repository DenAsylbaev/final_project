{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport './css/style.css';\nimport './css/normalize.css';\nVue.config.productionTip = false;\nconst API = 'https://raw.githubusercontent.com/GeekBrainsTutorial/online-store-api/master/responses';\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n  data: {\n    userSearch: ''\n  },\n  methods: {\n    getJson(url) {\n      return fetch(url).then(result => result.json()).catch(error => {\n        // console.log(error)\n        this.$refs.error.text = error;\n      });\n    },\n\n    postJson(url, data) {\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.json()).catch(error => {\n        // console.log(error)\n        this.$refs.error.text = error;\n      });\n    },\n\n    putJson(url, data) {\n      return fetch(url, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(result => result.json()).catch(error => {\n        // console.log(error)\n        this.$refs.error.text = error;\n      });\n    },\n\n    delJson(url) {\n      return fetch(url, {\n        method: 'DELETE',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        } // body: JSON.stringify(data)\n\n      }).then(result => result.json()).catch(error => {\n        // console.log(error)\n        this.$refs.error.text = error;\n      });\n    }\n\n  },\n\n  mounted() {}\n\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","store","config","productionTip","API","render","h","data","userSearch","methods","getJson","url","fetch","then","result","json","catch","error","$refs","text","postJson","method","headers","body","JSON","stringify","putJson","delJson","mounted","$mount"],"sources":["/Users/denis/gb_online_store/src/main.js"],"sourcesContent":["import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\n\nimport './css/style.css';\nimport './css/normalize.css';\n\n\nVue.config.productionTip = false;\n\nconst API = 'https://raw.githubusercontent.com/GeekBrainsTutorial/online-store-api/master/responses';\n\n\nnew Vue({\n  router,\n  store,\n  render: (h) => h(App),\n\n\n  data: {\n    userSearch: '',\n  },\n  \n  methods: {\n    getJson(url){\n        return fetch(url)\n            .then(result => result.json())\n            .catch(error => {\n                // console.log(error)\n                this.$refs.error.text = error;\n            })\n    },\n    postJson(url, data){\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(result => result.json())\n            .catch(error => {\n                // console.log(error)\n                this.$refs.error.text = error;\n            })\n    },\n    putJson(url, data){\n        return fetch(url, {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(result => result.json())\n            .catch(error => {\n                // console.log(error)\n                this.$refs.error.text = error;\n            })\n    },\n\n    delJson(url){\n        return fetch(url, {\n            method: 'DELETE',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            // body: JSON.stringify(data)\n        })\n            .then(result => result.json())\n            .catch(error => {\n                // console.log(error)\n                this.$refs.error.text = error;\n            })\n    },\n\n},\nmounted() {\n}\n}).$mount('#app');\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,iBAAP;AACA,OAAO,qBAAP;AAGAH,GAAG,CAACI,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,MAAMC,GAAG,GAAG,wFAAZ;AAGA,IAAIN,GAAJ,CAAQ;EACNE,MADM;EAENC,KAFM;EAGNI,MAAM,EAAGC,CAAD,IAAOA,CAAC,CAACP,GAAD,CAHV;EAMNQ,IAAI,EAAE;IACJC,UAAU,EAAE;EADR,CANA;EAUNC,OAAO,EAAE;IACPC,OAAO,CAACC,GAAD,EAAK;MACR,OAAOC,KAAK,CAACD,GAAD,CAAL,CACFE,IADE,CACGC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADb,EAEFC,KAFE,CAEIC,KAAK,IAAI;QACZ;QACA,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,IAAjB,GAAwBF,KAAxB;MACH,CALE,CAAP;IAMH,CARM;;IASPG,QAAQ,CAACT,GAAD,EAAMJ,IAAN,EAAW;MACf,OAAOK,KAAK,CAACD,GAAD,EAAM;QACdU,MAAM,EAAE,MADM;QAEdC,OAAO,EAAE;UACL,gBAAgB;QADX,CAFK;QAKdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,IAAf;MALQ,CAAN,CAAL,CAOFM,IAPE,CAOGC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAPb,EAQFC,KARE,CAQIC,KAAK,IAAI;QACZ;QACA,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,IAAjB,GAAwBF,KAAxB;MACH,CAXE,CAAP;IAYH,CAtBM;;IAuBPS,OAAO,CAACf,GAAD,EAAMJ,IAAN,EAAW;MACd,OAAOK,KAAK,CAACD,GAAD,EAAM;QACdU,MAAM,EAAE,KADM;QAEdC,OAAO,EAAE;UACL,gBAAgB;QADX,CAFK;QAKdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,IAAf;MALQ,CAAN,CAAL,CAOFM,IAPE,CAOGC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAPb,EAQFC,KARE,CAQIC,KAAK,IAAI;QACZ;QACA,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,IAAjB,GAAwBF,KAAxB;MACH,CAXE,CAAP;IAYH,CApCM;;IAsCPU,OAAO,CAAChB,GAAD,EAAK;MACR,OAAOC,KAAK,CAACD,GAAD,EAAM;QACdU,MAAM,EAAE,QADM;QAEdC,OAAO,EAAE;UACL,gBAAgB;QADX,CAFK,CAKd;;MALc,CAAN,CAAL,CAOFT,IAPE,CAOGC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAPb,EAQFC,KARE,CAQIC,KAAK,IAAI;QACZ;QACA,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,IAAjB,GAAwBF,KAAxB;MACH,CAXE,CAAP;IAYH;;EAnDM,CAVH;;EAgERW,OAAO,GAAG,CACT;;AAjEO,CAAR,EAkEGC,MAlEH,CAkEU,MAlEV"},"metadata":{},"sourceType":"module"}